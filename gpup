#!/bin/sh

CURRENT_GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
REMOTE=$(git config --get "branch.$CURRENT_GIT_BRANCH.remote")

function push_args {
	MERGE=$1
	shift
	echo "running: git push $@ origin $MERGE"
	git push $@ origin $MERGE
}
function push {
	echo "running: git push origin $1"
	git push origin $1
}

function set_upstream {
	MY_CURRENT_GIT_BRANCH="$1"
	MY_REMOTE="$2"
	MY_MERGE="$3"
	if [ "$MY_MERGE" == "" ]; then
		MY_MERGE="$MY_CURRENT_GIT_BRANCH"
	fi
	echo "in set_upstream: $MY_CURRENT_GIT_BRANCH $MY_REMOTE"
	echo running: git branch $MY_CURRENT_GIT_BRANCH -u $MY_REMOTE/$MY_MERGE
	git branch $MY_CURRENT_GIT_BRANCH -u $MY_REMOTE/$MY_MERGE
}


if [ "$REMOTE" != "" ]; then
	MERGE=$(git config --get "branch.$CURRENT_GIT_BRANCH.merge" \
		| sed -e 's/refs\/heads\///g')

	if [ "$MERGE" != "" ]; then
		if [ $# -gt 0 ]; then
			push_args $MERGE $@
		else
			push $MERGE
		fi
	else
		echo "Umm... you've got a remote configured but not a merge. quitting"
	fi

	if [ "$REMOTE" != "origin" ]; then
		# reset the remote to what it was
		git branch $CURRENT_GIT_BRANCH -u $REMOTE/$MERGE
	fi

else
	echo "No branch specific upstream. "
	echo "Want me to set the upstream tracking to origin/$CURRENT_GIT_BRANCH ? [enter for yes|n]"
	read SET_UPSTREAM
	if [ "$SET_UPSTREAM" != "n" ]; then
		set_upstream "$CURRENT_GIT_BRANCH" "origin"
		# git branch $CURRENT_GIT_BRANCH -u origin/$CURRENT_GIT_BRANCH
	else
		echo "Ok, you'll probably want to run something like this soon:"
		echo "    git push --set-upstream origin $CURRENT_GIT_BRANCH"
	fi
	RESPONSE='q'
	if [ "$SET_UPSTREAM" = "" ]; then
		RESPONSE=''
	else
		echo "Continue with default? [enter for yes|q for quit]"
		# technically it's enter or anything else to quit
		# but we'll say 'q' ;)
		read RESPONSE
	fi
	if [ "$RESPONSE" = "" ]; then
		if [ $# -gt 0 ]; then
			push_args $MERGE $@
		else
			push $CURRENT_GIT_BRANCH
		fi
	else
		echo "quitting"
	fi
fi

